// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TourAgency.DAL.Entities;

#nullable disable

namespace TourAgency.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TourAgency.DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal?>("VisaPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TourAgency.DAL.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal?>("TravelPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("TourAgency.DAL.Entities.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("SellDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TravelPurpose")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("TourAgency.DAL.Entities.Route", b =>
                {
                    b.HasOne("TourAgency.DAL.Entities.Country", "Country")
                        .WithMany("Routes")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TourAgency.DAL.Entities.Sale", b =>
                {
                    b.HasOne("TourAgency.DAL.Entities.Route", "Route")
                        .WithMany("Sales")
                        .HasForeignKey("RouteId");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("TourAgency.DAL.Entities.Country", b =>
                {
                    b.Navigation("Routes");
                });

            modelBuilder.Entity("TourAgency.DAL.Entities.Route", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
